server:
  port: 8080
  forward-headers-strategy: framework
  tomcat:
    connection-timeout: 1800000
address:
  domains: ${DOMAIN_ADDRESS}
gemini:
  api-key: ${GEMINI_API_KEY}
springdoc:
  swagger-ui:
    path: /swagger-ui
    disable-swagger-default-url: true
spring:
  profiles:
    include: oauth
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ""
      timeout: 5000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
  jwt:
    secret: ${JWT_SECRET}
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: https://calit.kro.kr/oauth/login/oauth2/code/google
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - account_email
              - profile_nickname
            authorization-grant-type: authorization_code
            redirect-uri: https://calit.kro.kr/oauth/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: client_secret_post
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: https://calit.kro.kr/oauth/login/oauth2/code/naver
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response


  kafka:
    bootstrap-servers: ${KAFKA_SERVER}
    producer:
      bootstrap-servers: ${KAFKA_SERVER}
    consumer:
      bootstrap-servers: ${KAFKA_SERVER}

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace
    org.springframework.security:
    org.apache.kafka: OFF
    kafka: OFF
    org.springframework.kafka: OFF

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESSKEY}
      secret-key: ${AWS_SECRETKEY}
    region:
      static: ${AWS_REGION}
      auto: false
    stack:
      auto: false
    s3:
      bucket: ${S3_BUCKET}

chatbot:
  webhook:
    note-url: ${CHATBOT_WEBHOOK_NOTE_URL}
    meeting-url: ${CHATBOT_WEBHOOK_MEETING_URL}
    etc-url: ${CHATBOT_WEBHOOK_ETC_URL}
    list-url: ${CHATBOT_WEBHOOK_LIST_URL}